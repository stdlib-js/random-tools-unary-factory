// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-method-in@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-output-data-type-policy@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-order@v0.2.2-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-every-by@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.2-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/random-tools-unary@v0.0.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function g(g,v,y,b,w){var x;if(!n(g))throw new TypeError(c("null3c",g));if(!s(g,"factory"))throw new TypeError(c("nullFM","factory"));if(!d(v)||v.length<1||!u(v,a))throw new TypeError(c("invalid argument. Second argument must be an array of data types. Value: `%s`.",v));if(!d(y)||y.length<1||!u(y,a))throw new TypeError(c("invalid argument. Third argument must be an array of data types. Value: `%s`.",y));if(!o(b))throw new TypeError(c("null43",b));if(!l(b.output))throw new TypeError(c("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",b.output));if(x={},arguments.length>4){if(!i(w))throw new TypeError(c("null2V",w));if(p(w,"order")&&(x.order=w.order,!m(x.order)))throw new TypeError(c("invalid option. `%s` option must be a valid memory layout. Option: `%s`.","order",x.order))}return function(){var s,n,o;if(arguments.length>0){if(!i(o=arguments[0]))throw new TypeError(c("null2V",o));n=g.factory(o)}else o={},n=g;s=new f(n,v,y,b,x),o&&o.prng?(e(d,"seed",null),e(d,"seedLength",null),r(d,"state",h(null),j),e(d,"stateLength",null),e(d,"byteLength",null)):(t(d,"seed",(function(){return d.PRNG.seed})),t(d,"seedLength",(function(){return d.PRNG.seedLength})),r(d,"state",(function(){return d.PRNG.state}),(function(e){d.PRNG.state=e})),t(d,"stateLength",(function(){return d.PRNG.stateLength})),t(d,"byteLength",(function(){return d.PRNG.byteLength})));return e(d,"PRNG",n.PRNG),e(d,"assign",(function(e,t){return s.assign(e,t)})),d;function d(e,t,r){return arguments.length<3?s.generate(e,t):s.generate(e,t,r)}}}export{g as default};
//# sourceMappingURL=index.mjs.map
